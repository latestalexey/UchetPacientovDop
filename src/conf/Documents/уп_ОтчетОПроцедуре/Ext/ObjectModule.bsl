
Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Движения.ОстаткиПроцедур.Записывать = Истина;
	Движение = Движения.ОстаткиПроцедур.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Процедура = Назначение;
	Движение.Количество = 1;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Если ДокументОснование.Проведен Тогда
			Движение.Состояние = ДокументОснование.Состояние;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ основание не проведен!", ДокументОснование.Ссылка,"","", Отказ);		
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен документ основание!", ЭтотОбъект.Ссылка, "ДокументОснование", "ЭтотОбъект.ДокументОснование", Отказ);		
		
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//               |	ВЫБОР
		//               |		КОГДА ОстаткиПроцедурОстатки.Состояние = ЗНАЧЕНИЕ(Перечисление.уп_СостоянияНазначений.Подтвержденная)
		//               |			ТОГДА 1
		//               |		КОГДА ОстаткиПроцедурОстатки.Состояние = ЗНАЧЕНИЕ(Перечисление.уп_СостоянияНазначений.Ручная)
		//               |			ТОГДА 2
		//               |		КОГДА ОстаткиПроцедурОстатки.Состояние = ЗНАЧЕНИЕ(Перечисление.уп_СостоянияНазначений.Автоматическая)
		//               |			ТОГДА 3
		//               |		КОГДА ОстаткиПроцедурОстатки.Состояние = ЗНАЧЕНИЕ(Перечисление.уп_СостоянияНазначений.Нераспределенная)
		//               |			ТОГДА 4
		//               |		ИНАЧЕ 255
		//               |	КОНЕЦ КАК Важность,
		//               |	ОстаткиПроцедурОстатки.Состояние КАК Состояние
		//               |ИЗ
		//               |	РегистрНакопления.ОстаткиПроцедур.Остатки(
		//               |			&Период,
		//               |			Клиент = &Клиент
		//               |				И Процедура = &Процедура) КАК ОстаткиПроцедурОстатки
		//               |ГДЕ
		//               |	ОстаткиПроцедурОстатки.КоличествоОстаток > 0
		//               |
		//               |УПОРЯДОЧИТЬ ПО
		//               |	Важность";
		//Запрос.УстановитьПараметр("Период", Дата);
		//Запрос.УстановитьПараметр("Клиент", Клиент);
		//Запрос.УстановитьПараметр("Процедура", Назначение);
		//Результат = Запрос.Выполнить().Выбрать();
		//Отказ = Истина;
		//Пока Результат.Следующий() Цикл
		//	Если Результат.Важность <> 255 Тогда
		//		Движение.Состояние = Результат.Состояние;
		//		Отказ = Ложь;
		//		Прервать;
		//	КонецЕсли;
		//КонецЦикла;   		
	КонецЕсли;
	
//	РегистрыСведений.уп_ГрафикРаботы.ЗакрытьЗаписьГрафика(Сотрудник, Клиент, Помещение, Дата);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	//РегистрыСведений.уп_ГрафикРаботы.ОткрытьЗаписьГрафика(Сотрудник, Клиент, Помещение, Дата);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.уп_ПредварительнаяЗапись") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		Назначение = ДанныеЗаполнения.Назначение;
		Помещение = ДанныеЗаполнения.Помещение;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
КонецПроцедуры
