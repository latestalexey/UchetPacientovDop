
#Область ПрограммныйИнтерфейс

// Обработка оповещения
&НаКлиенте
Процедура УстановитьОтборЗавершение(СтруктураВозврата, Параметры) Экспорт
	
	Если ЗначениеЗаполнено(СтруктураВозврата) Тогда 
		СписокЗначенийОтбора.Добавить(СтруктураВозврата);
		ЗаголовокДекорацииОтбор = СтрЗаменить(НСтр("ru = '%1: %2'"), "%1", СотрудникКабиентПереключатель);
		ЗаголовокДекорацииОтбор = СтрЗаменить(ЗаголовокДекорацииОтбор, "%2", СписокЗначенийОтбора);
		Элементы.ДекорацияОтбор.Заголовок = ЗаголовокДекорацииОтбор;
 
	КонецЕсли;	
	ОбновитьТабличныйДокумент();
	
	Элементы.ГруппаОтбор.Видимость = ЗначениеЗаполнено(СписокЗначенийОтбора);
	
КонецПроцедуры

// Обработка оповещения
&НаКлиенте
Процедура НастройкаЗавершение(СтруктураВозврата, Параметры) Экспорт
	
	ОбновитьИнтерфейс();
	ЗагрузитьНастройки();
	ОбновитьТабличныйДокумент();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;	
		
	ЗагрузитьНастройки();

	Период.ДатаНачала			 	= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "Период") = Неопределено, ТекущаяДатаСеанса(), ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "Период"));
	ПериодПереключатель 			= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ПериодПереключатель") = Неопределено, "День", ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ПериодПереключатель"));
	СотрудникКабиентПереключатель 	= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "СотрудникКабиентПереключатель") = Неопределено, "Сотрудник", ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "СотрудникКабиентПереключатель"));
	
	Если ПериодПереключатель = "День" Тогда
		Период.ДатаНачала	 = НачалоДня(Период.ДатаНачала);
		Период.ДатаОкончания = КонецДня(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Неделя" Тогда
		Период.ДатаНачала	 = НачалоНедели(Период.ДатаНачала);
		Период.ДатаОкончания = КонецНедели(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Месяц" Тогда
		Период.ДатаНачала	 = НачалоМесяца(Период.ДатаНачала);
	    Период.ДатаОкончания = КонецМесяца(Период.ДатаНачала);
	КонецЕсли;
	
	Заголовок = СформироватьЗаголовокФормы(Период, ПериодПереключатель);
	
	Элементы.ГруппаОтбор.Видимость = ЗначениеЗаполнено(СписокЗначенийОтбора);

	ОбновитьТабличныйДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(3, 2);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ПредварительнаяЗапись" 
		Или ИмяСобытия = "Удаление_ПредварительнаяЗапись"
		Или ИмяСобытия = "Запись_ПредварительныйГрафикРаботыСотрудника" Тогда
		
		ОбновитьТабличныйДокумент();
		УстановитьВидимостьКонтекстногоМеню();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодПереключательПриИзменении(Элемент)
	
	Если ПериодПереключатель = "День" Тогда
		Период.ДатаНачала	 = НачалоДня(Период.ДатаНачала);
		Период.ДатаОкончания = КонецДня(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Неделя" Тогда
		Период.ДатаНачала	 = НачалоНедели(Период.ДатаНачала);
		Период.ДатаОкончания = КонецНедели(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Месяц" Тогда
		Период.ДатаНачала	 = НачалоМесяца(Период.ДатаНачала);
	    Период.ДатаОкончания = КонецМесяца(Период.ДатаНачала);
	КонецЕсли;
	
	Заголовок = СформироватьЗаголовокФормы(Период, ПериодПереключатель);
	
	ОбновитьТабличныйДокумент();
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если ПериодПереключатель = "День" Тогда 		
		Период.ДатаНачала = НачалоДня(Период.ДатаНачала);
		Период.ДатаОкончания = КонецДня(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Неделя" Тогда 				
		Период.ДатаНачала = НачалоНедели(Период.ДатаНачала);
		Период.ДатаОкончания = КонецНедели(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Месяц" Тогда 		
		Период.ДатаНачала = НачалоМесяца(Период.ДатаНачала);
		Период.ДатаОкончания = КонецМесяца(Период.ДатаНачала);				
	КонецЕсли;
	
	Заголовок = СформироватьЗаголовокФормы(Период, ПериодПереключатель);

	ОбновитьТабличныйДокумент();
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникКабиентПереключательПриИзменении(Элемент)
	
	СписокЗначенийОтбора.Очистить();
	Элементы.ГруппаОтбор.Видимость = ЗначениеЗаполнено(СписокЗначенийОтбора);

	ОбновитьТабличныйДокумент();
	
	СохранитьНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущаяОбласть.Расшифровка) Тогда 
		ОткрытьФорму("Документ.уп_ПредварительнаяЗапись.Форма.ФормаДокумента", Новый Структура("ЗначенияЗаполнения", ПолучитьПараметрыОткрытияПредварительнойЗаписи()), ЭтаФорма);
	ИначеЕсли ТипЗнч(Элемент.ТекущаяОбласть.Расшифровка) = Тип("ДокументСсылка.уп_ПредварительнаяЗапись") Тогда	
		ПараметрыФормы = Новый Структура;
 		ПараметрыФормы.Вставить("Ключ", Элемент.ТекущаяОбласть.Расшифровка);
		ОткрытьФорму("Документ.уп_ПредварительнаяЗапись.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) = Тип("ДокументСсылка.уп_ПредварительнаяЗапись") Тогда	
		
		ПараметрыФормы = Новый Структура;
 		ПараметрыФормы.Вставить("Ключ", Расшифровка);
		ОткрытьФорму("Документ.уп_ПредварительнаяЗапись.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма);
		
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Контрагенты") Тогда
		
		ПараметрыФормы = Новый Структура;
 		ПараметрыФормы.Вставить("Ключ", Расшифровка);
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("СправочникСсылка.Помещения") Тогда
		
		ПараметрыФормы = Новый Структура;
 		ПараметрыФормы.Вставить("Ключ", Расшифровка);
		ОткрытьФорму("Справочник.Помещения.Форма.ФормаЭлемента", ПараметрыФормы, ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизацииОбласти(Элемент)
	
	УстановитьВидимостьКонтекстногоМеню();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УменьшитьПериод(Команда)
	
	Если ПериодПереключатель = "День" Тогда 
		Период.ДатаНачала 		= Период.ДатаНачала - 24 * 60 * 60;
		Период.ДатаОкончания 	= КонецДня(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Неделя" Тогда 
		Период.ДатаНачала 		= Период.ДатаНачала - 7 * 24 * 60 * 60;
		Период.ДатаОкончания 	= КонецНедели(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Месяц" Тогда 
	    Период.ДатаНачала 		= ДобавитьМесяц(Период.ДатаНачала, -1);
		Период.ДатаОкончания 	= КонецМесяца(Период.ДатаНачала);
	КонецЕсли;
	
	Заголовок = СформироватьЗаголовокФормы(Период, ПериодПереключатель);
	
	СохранитьНастройки();
	
	ОбновитьТабличныйДокумент();

КонецПроцедуры

&НаКлиенте
Процедура УвеличитьПериод(Команда)
	
	Если ПериодПереключатель = "День" Тогда 
		Период.ДатаНачала 		= Период.ДатаНачала + 24 * 60 * 60;
		Период.ДатаОкончания 	= КонецДня(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Неделя" Тогда 
		Период.ДатаНачала 		= Период.ДатаНачала + 7 * 24 * 60 * 60;
		Период.ДатаОкончания 	= КонецНедели(Период.ДатаНачала);
	ИначеЕсли ПериодПереключатель = "Месяц" Тогда 
	    Период.ДатаНачала 		= ДобавитьМесяц(Период.ДатаНачала, 1);
		Период.ДатаОкончания 	= КонецМесяца(Период.ДатаНачала);
	КонецЕсли;
	
	Заголовок = СформироватьЗаголовокФормы(Период, ПериодПереключатель);
	
	СохранитьНастройки();
	
	ОбновитьТабличныйДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗапись(Команда)
	
	ОткрытьФорму("Документ.уп_ПредварительнаяЗапись.Форма.ФормаДокумента", Новый Структура("ЗначенияЗаполнения", ПолучитьПараметрыОткрытияПредварительнойЗаписи()), ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗапись(Команда)
	
	Расшифровка = Элементы.ТабличныйДокумент.ТекущаяОбласть.Расшифровка;
	
	Если ТипЗнч(Расшифровка) = Тип("ДокументСсылка.уп_ПредварительнаяЗапись") Тогда	 
		
		ПараметрыОткрытия = Новый Структура();
		ПараметрыОткрытия.Вставить("Ключ", Расшифровка);
		ОткрытьФорму("Документ.уп_ПредварительнаяЗапись.Форма.ФормаДокумента", ПараметрыОткрытия, ЭтаФорма);

	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗапись(Команда)
	
	Расшифровка = Элементы.ТабличныйДокумент.ТекущаяОбласть.Расшифровка;
	
	Если ТипЗнч(Расшифровка) = Тип("ДокументСсылка.уп_ПредварительнаяЗапись") Тогда	 
		
		Если УдалитьДокументНаСервере(Расшифровка) Тогда 
			
			ОбновитьТабличныйДокумент();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьТабличныйДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтбор(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("УстановитьОтборЗавершение", ЭтаФорма);
	Если СотрудникКабиентПереключатель = "Сотрудник" Тогда 
		ПараметрыОткрытия.Вставить("Сотрудники");
		ПараметрыОткрытия.Вставить("Отбор", Новый Структура("Сотрудник", Истина));
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, Оповещение);
	Иначе 
		ОткрытьФорму("Справочник.Помещения.Форма.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма,,,, Оповещение);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтбор(Команда)
	
	СписокЗначенийОтбора.Очистить();
	Элементы.ГруппаОтбор.Видимость = ЗначениеЗаполнено(СписокЗначенийОтбора);
	
	ОбновитьТабличныйДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("НастройкаЗавершение", ЭтаФорма);
	ОткрытьФорму("Обработка.уп_ЖурналЗаписиНаПрием.Форма.Настройка", ПараметрыОткрытия, ЭтаФорма,,,, Оповещение);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНастройки()
		
	ВремяНачалаРаботы  			= ?(ХранилищеОбщихНастроек.Загрузить("ВремяРаботы", "ВремяНачалаРаботы")		= Неопределено, '000101011000', ХранилищеОбщихНастроек.Загрузить("ВремяРаботы", "ВремяНачалаРаботы"));
	ВремяОкончанияРаботы 		= ?(ХранилищеОбщихНастроек.Загрузить("ВремяРаботы", "ВремяОкончанияРаботы")		= Неопределено, '000101011900', ХранилищеОбщихНастроек.Загрузить("ВремяРаботы", "ВремяОкончанияРаботы")); 
	КратностьВремениЗаписи		= ?(ХранилищеОбщихНастроек.Загрузить("ВремяРаботы", "КратностьВремениЗаписи")	= Неопределено, 30, 			ХранилищеОбщихНастроек.Загрузить("ВремяРаботы", "КратностьВремениЗаписи"));; 
	
	ЦветЗаписиКлиента 			= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветЗаписиКлиента") 		= Неопределено, Новый Цвет(255, 232, 179), 	ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветЗаписиКлиента")); 
	ЦветПервичнойЗаписи 		= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветПервичнойЗаписи") 		= Неопределено, Новый Цвет(255, 165, 179), 	ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветПервичнойЗаписи"));;
	ЦветПодтвержденнойЗаписи 	= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветПодтвержденнойЗаписи")	= Неопределено, Новый Цвет(0, 255, 0), 		ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветПодтвержденнойЗаписи"));;
	ЦветНеявки 					= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветНеявки") 				= Неопределено, Новый Цвет(255, 140, 105), 	ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветНеявки"));;
	ЦветПрочейЗаписи 			= ?(ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветПрочейЗаписи") 		= Неопределено, Новый Цвет(255, 165, 0), 	ХранилищеОбщихНастроек.Загрузить("ЖурналЗаписиНаПрием", "ЦветПрочейЗаписи"));;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТабличныйДокумент()
	
	ТабличныйДокумент.Очистить();
	
	ТабличныйДокумент.ФиксацияСверху = 2;
	ТабличныйДокумент.ФиксацияСлева = 1;
		
	СтруктураАдресов = уп_ПредварительнаяЗапись.ПолучитьРасписаниеПриема(Период.ДатаНачала, Период.ДатаОкончания, КратностьВремениЗаписи, СотрудникКабиентПереключатель, СписокЗначенийОтбора); 
	
	ТаблицаИзмерений = ПолучитьИзВременногоХранилища(СтруктураАдресов.АдресИзмерений);
	ТаблицаЭлементов = ПолучитьИзВременногоХранилища(СтруктураАдресов.АдресЭлементов);
		
	Макет = Обработки.уп_ЖурналЗаписиНаПрием.ПолучитьМакет("Макет");
	
	ОбластьШапкаШкала 		= Макет.ПолучитьОбласть("Шапка|Шкала");
	ОбластьШапкаИзмерение 	= Макет.ПолучитьОбласть("Шапка|Измерение");
	
	ОбластьШкала 			= Макет.ПолучитьОбласть("Кратность" + КратностьВремениЗаписи + "|Шкала");
	ОбластьИзмерение 		= Макет.ПолучитьОбласть("Кратность" + КратностьВремениЗаписи + "|Измерение");
	
	СплошнаяЛиния 			= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	
	ТабличныйДокумент.Вывести(ОбластьШапкаШкала);
	
	// Вывод дат записей.
	ТекДата = Период.ДатаНачала;
	ТекКолонка = 2;	
	
	Пока ТекДата <= НачалоДня(Период.ДатаОкончания) Цикл
				
		Отбор = Новый Структура;
		Отбор.Вставить("Период", ТекДата);
		НайденныеЭлементы = ТаблицаИзмерений.НайтиСтроки(Отбор);
			
		Если НайденныеЭлементы.Количество() > 0 Тогда
			КолонкаНачалаПериода = ТекКолонка;
			Для Каждого ТекИзмерение из НайденныеЭлементы Цикл 
				ОбластьШапкаИзмерение.Параметры.Измерение = ТекДата;
				ТабличныйДокумент.Присоединить(ОбластьШапкаИзмерение); 
				ТекКолонка = ТекКолонка + 1;
			КонецЦикла;
			Если ТекКолонка - КолонкаНачалаПериода > 1 Тогда
				ТабличныйДокумент.Область(1, КолонкаНачалаПериода, 1, ТекКолонка - 1).Объединить();
				ТабличныйДокумент.Область(1, КолонкаНачалаПериода, 1, ТекКолонка - 1).Обвести(СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния);
			КонецЕсли;	
		Иначе
			ОбластьШапкаИзмерение.Параметры.Измерение = ТекДата; 
			ТабличныйДокумент.Присоединить(ОбластьШапкаИзмерение);
			ТекКолонка = ТекКолонка + 1;
		КонецЕсли;
		
		ТекДата = ТекДата + 24 * 60 * 60;
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьШапкаШкала);
	
	// Вывод измерений (сотрудников или кабинетов).
	ТекДата = Период.ДатаНачала;
	
	Пока ТекДата <= НачалоДня(Период.ДатаОкончания) Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Период", ТекДата);
		НайденныеЭлементы = ТаблицаИзмерений.НайтиСтроки(Отбор);
			
		Если НайденныеЭлементы.Количество() > 0 Тогда
			
			Для Каждого ТекИзмерение из НайденныеЭлементы Цикл 
				ЗаполнитьЗначенияСвойств(ОбластьШапкаИзмерение.Параметры, ТекИзмерение);
				ТабличныйДокумент.Присоединить(ОбластьШапкаИзмерение);
			КонецЦикла;
		Иначе
			ОбластьШапкаИзмерение.Параметры.Измерение = "";
			ТабличныйДокумент.Присоединить(ОбластьШапкаИзмерение);
		КонецЕсли;
		
		ТекДата = ТекДата + 24 * 60 * 60;
	КонецЦикла;
	
	// Вывод шкалы времени и вывод граф.	
	ТекВремя = ВремяНачалаРаботы;
	
	Пока Час(ТекВремя) < Час(ВремяОкончанияРаботы) Цикл 
		
		ОбластьШкала.Параметры.Час = Формат(ТекВремя, "ДФ=ЧЧ:мм");
		ТабличныйДокумент.Вывести(ОбластьШкала);
		
		ТекДата = Период.ДатаНачала;
		
		Пока ТекДата <= НачалоДня(Период.ДатаОкончания) Цикл

			Отбор = Новый Структура;
			Отбор.Вставить("Период", ТекДата);
			НайденныеЭлементы = ТаблицаИзмерений.НайтиСтроки(Отбор);
			
			Если НайденныеЭлементы.Количество() > 0 Тогда
				
				Для Каждого ТекИзмерение из НайденныеЭлементы Цикл 
					ТабличныйДокумент.Присоединить(ОбластьИзмерение);
				КонецЦикла;
			Иначе
				ТабличныйДокумент.Присоединить(ОбластьИзмерение);
			КонецЕсли;
			
			ТекДата = ТекДата + 24 * 60 * 60;
			
		КонецЦикла;
		
		ТекВремя = ТекВремя + 60 * 60;
		
	КонецЦикла;
	
	// Заполнение расшифровки и обединение ячеек.		
	Если ТаблицаЭлементов.Количество() = 0 Тогда
		Возврат;		
	КонецЕсли;	
	
	ТекДата = Период.ДатаНачала;
	ТекКолонка = 2;	
	
	Пока ТекДата <= НачалоДня(Период.ДатаОкончания) Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Период", ТекДата);
		НайденныеЭлементы = ТаблицаИзмерений.НайтиСтроки(Отбор);
		
		Если НайденныеЭлементы.Количество() > 0 Тогда
			
			Для Каждого ТекИзмерение из НайденныеЭлементы Цикл 
				
				ТекСтрока = 3;
				ОбластьПоиска = ТабличныйДокумент.Область(ТекСтрока - 1, ТекКолонка);
				ТекОбластьШапкиИзмерения = ТабличныйДокумент.НайтиЗначение(ТекИзмерение.Измерение,,ОбластьПоиска);
				Если ТекОбластьШапкиИзмерения = Неопределено Тогда 
					Возврат;	
				КонецЕсли;
				
				ТекЗапись = Неопределено;
				ТекВремя = ВремяНачалаРаботы;
				
				Пока Час(ТекВремя) < Час(ВремяОкончанияРаботы) Цикл 
					
					Отбор = Новый Структура;
					Отбор.Вставить(СотрудникКабиентПереключатель, ТекИзмерение.Измерение);
					Отбор.Вставить("Период", 		ТекДата);
					Отбор.Вставить("ВремяНачала", 	ТекВремя);
					
					НайденныеЭлементы = ТаблицаЭлементов.НайтиСтроки(Отбор);
					
					Если НайденныеЭлементы.Количество() > 0 Тогда 
						
						ТекЗапись = НайденныеЭлементы[0];
						ОбластьЯчеекЗаписи = ТабличныйДокумент.Область(ТекСтрока, ТекКолонка);
						
						// Проверка наложения ячеек.
						Если Не ОбластьЯчеекЗаписи.Верх = ОбластьЯчеекЗаписи.Низ И ТекСтрока <> 2 Тогда 
							ОбластьЯчеекЗаписи.Разъединить();
							ТабличныйДокумент.Область(ОбластьЯчеекЗаписи.Верх, ТекКолонка, ТекСтрока -1, ТекКолонка).Объединить();
							ТабличныйДокумент.Область(ОбластьЯчеекЗаписи.Верх, ТекКолонка, ТекСтрока -1, ТекКолонка).Обвести(СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния);
							ОбластьЯчеекЗаписи = ТабличныйДокумент.Область(ТекСтрока, ТекКолонка);
						КонецЕсли;	
						ОбластьЯчеекЗаписи.Расшифровка = ТекЗапись.Регистратор;
						
						ОбластьЯчеекЗаписи.Текст = СформироватьТекстЗаписи(ТекЗапись);
						
						//TODO: Расскраска ячеек по параметрам
						//Если ТекЗапись.Неявка Тогда 
						//	ОбластьЯчеекЗаписи.ЦветФона = ЦветНеявки;						
						//ИначеЕсли ТекЗапись.Подтверждение Тогда  
						//	ОбластьЯчеекЗаписи.ЦветФона = ЦветПодтвержденнойЗаписи;
						//ИначеЕсли ТекЗапись.Первичная Тогда  
						//	ОбластьЯчеекЗаписи.ЦветФона = ЦветПервичнойЗаписи;	
						//ИначеЕсли ТекЗапись.ТипЗаписи = ПредопределенноеЗначение("Перечисление.ТипыПредварительнойЗаписи.ПрочаяЗапись") Тогда  
						//	ОбластьЯчеекЗаписи.ЦветФона = ЦветПрочейЗаписи;
						//Иначе
							ОбластьЯчеекЗаписи.ЦветФона = ЦветЗаписиКлиента;
						//КонецЕсли;
						
						ВысотаСтрокЗаписи = (ТекЗапись.ВремяОкончания - ТекЗапись.ВремяНачала) / (КратностьВремениЗаписи * 60);
						
						Если ВысотаСтрокЗаписи > 1 Тогда 
							ТабличныйДокумент.Область(ТекСтрока, ТекКолонка, ТекСтрока + ВысотаСтрокЗаписи - 1, ТекКолонка).Объединить();
							ТабличныйДокумент.Область(ТекСтрока, ТекКолонка, ТекСтрока + ВысотаСтрокЗаписи - 1, ТекКолонка).Обвести(СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния);
						Иначе
							ТабличныйДокумент.Область(ТекСтрока, ТекКолонка, ТекСтрока, ТекКолонка).Обвести(СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния, СплошнаяЛиния);	
						КонецЕсли;
												
					КонецЕсли;
					
					ТекСтрока = ТекСтрока + 1;
					ТекВремя = ТекВремя + КратностьВремениЗаписи * 60;
					
				КонецЦикла;
				ТекКолонка = ТекКолонка + 1;
			КонецЦикла;
		Иначе	
			ТекКолонка = ТекКолонка + 1;
		КонецЕсли;
		ТекДата = ТекДата + 24 * 60 * 60;
	КонецЦикла;                               
	
КонецПроцедуры // ОбновитьТабличныйДокумент()

&НаКлиенте
Процедура УстановитьВидимостьКонтекстногоМеню()
	
	Если ЗначениеЗаполнено(ТабличныйДокумент.ТекущаяОбласть.Расшифровка) Тогда 
		
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьЗапись.Видимость	= Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюИзменитьЗапись.Видимость 	= Истина;
		Элементы.ТабличныйДокументКонтекстноеМенюУдалитьЗапись.Видимость 	= Истина;

	Иначе 
		
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьЗапись.Видимость 	= Истина;
		Элементы.ТабличныйДокументКонтекстноеМенюИзменитьЗапись.Видимость 	= Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюУдалитьЗапись.Видимость 	= Ложь;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
      	
	ХранилищеОбщихНастроек.Сохранить("ЖурналЗаписиНаПрием", "Период", 							Период.ДатаНачала);
	ХранилищеОбщихНастроек.Сохранить("ЖурналЗаписиНаПрием", "ПериодПереключатель", 				ПериодПереключатель);
	ХранилищеОбщихНастроек.Сохранить("ЖурналЗаписиНаПрием", "СотрудникКабиентПереключатель", 	СотрудникКабиентПереключатель);
	
КонецПроцедуры

&НаСервере
Функция СформироватьТекстЗаписи(ТекЗапись)

	Текст = "";
	//Если ТекЗапись.ТипЗаписи = ПредопределенноеЗначение("Перечисление.ТипыПредварительнойЗаписи.ЗаписьКлиента") Тогда 
	//	Текст = СтрЗаменить(
	//		НСтр("ru = '%1 %2
	//			|%3
	//			|%4'"),
	//			"%1", Формат(ТекЗапись.Регистратор.ВремяНачала, "ДФ=ЧЧ:мм"));
	//	Текст = СтрЗаменить(Текст, "%2", ?(ЗначениеЗаполнено(ТекЗапись.Телефон), Строка(ТекЗапись.Клиент) + Символы.ПС + Строка(ТекЗапись.Телефон), ТекЗапись.Клиент));
	//	Текст = СтрЗаменить(Текст, "%3", ?(СотрудникКабиентПереключатель = "Сотрудник", ТекЗапись.Кабинет, ТекЗапись.Сотрудник));
	//	Текст = СтрЗаменить(Текст, "%4", ТекЗапись.Комментарий);
	//Иначе 
		Текст = СтрЗаменить(
			НСтр("ru = '%1 %2
				|%3
				|%4'"),
				"%1", Формат(ТекЗапись.Регистратор.ВремяНачала, "ДФ=ЧЧ:мм"));
		Текст = СтрЗаменить(Текст, "%2", ТекЗапись.Клиент);
		Текст = СтрЗаменить(Текст, "%3", ?(СотрудникКабиентПереключатель = "Сотрудник", ТекЗапись.Помещение, ТекЗапись.Сотрудник));
		Текст = СтрЗаменить(Текст, "%4", "");//ТекЗапись.Комментарий); //TODO: Добавить комментарий
	//КонецЕсли;
	
	Возврат Текст;
	
КонецФункции
			
&НаСервереБезКонтекста
Функция УдалитьДокументНаСервере(ДокументСсылка)
	
	Возврат уп_ПредварительнаяЗапись.УдалитьПредварительнуюЗапись(ДокументСсылка);   
	
Конецфункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьЗаголовокФормы(Период, ПериодПереключатель)
	
	Если ПериодПереключатель = "День" Тогда 
		Результат = СтрЗаменить(НСтр("ru = 'Журнал записи на %1 (%2)'"), "%1", Формат(Период.ДатаНачала, "ДЛФ=DD"));
		Результат = СтрЗаменить(Результат, "%2", Формат(Период.ДатаНачала, "ДФ=dddd"));
								
	ИначеЕсли ПериодПереключатель = "Неделя" Или ПериодПереключатель = "Месяц" Тогда 
	    Результат = СтрЗаменить(НСтр("ru = 'Журнал записи с %1 по %2'"), "%1", Формат(Период.ДатаНачала, "ДЛФ=DD"));
		Результат = СтрЗаменить(Результат, "%2", Формат(Период.ДатаОкончания, "ДЛФ=DD"));
									
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаСервереБезКонтекста                   
Функция ПолучитьОсновнойСкладСотрудника(Сотрудник)
	
	ОсновнойСклад = Справочники.Помещения.ПустаяСсылка();	
	
	//TODO: Определиться с необходимостью помещения сотрудника
	//Если ЗначениеЗаполнено(Сотрудник) Тогда 
	//	
	//	ОсновнойСклад = Сотрудник.ОсновнойСклад;	
	//	
	//КонецЕсли;	
	
	Возврат ОсновнойСклад;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыОбласти(ТекущаяОбласть)
	ТекДата		 	= ТабличныйДокумент.Область(1, ТекущаяОбласть.Лево).Расшифровка;
	ТекИзмерение 	= ТабличныйДокумент.Область(2, ТекущаяОбласть.Лево).Расшифровка;
	
	ДанныеЗаполнения = Новый Структура;
	
	// ДанныеЗаполнения.Вставить("Дата", Дата(Прав(ТекДатаСтрокой, 4), Сред(ТекДатаСтрокой, 4, 2), Лев(ТекДатаСтрокой, 2)));
	ДанныеЗаполнения.Вставить("Дата", ТекДата);
	Если ТипЗнч(ТекИзмерение) = Тип("СправочникСсылка.Контрагенты") Тогда 
		
		ДанныеЗаполнения.Вставить("Сотрудник", ТекИзмерение);
		ДанныеЗаполнения.Вставить("Помещенеие", ПолучитьОсновнойСкладСотрудника(ТекИзмерение));
		
	ИначеЕсли ТипЗнч(ТекИзмерение) = Тип("СправочникСсылка.Помещения") Тогда 
		
		ДанныеЗаполнения.Вставить("Помещение", ТекИзмерение);	
		
	КонецЕсли;
	
	ВремяНачала 		= ВремяНачалаРаботы + (ТекущаяОбласть.Верх - 3) * КратностьВремениЗаписи * 60;
    ВремяОкончания 		= ВремяНачалаРаботы + (ТекущаяОбласть.Низ  - 2) * КратностьВремениЗаписи * 60;

	ДанныеЗаполнения.Вставить("ВремяНачала", 	ВремяНачала);
	ДанныеЗаполнения.Вставить("ВремяОкончания", ВремяОкончания);
	
	Возврат ДанныеЗаполнения;
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыОткрытияПредварительнойЗаписи()
	
	ТекущаяОбласть	= Элементы.ТабличныйДокумент.ТекущаяОбласть;	
	Возврат ПолучитьПараметрыОбласти(ТекущаяОбласть);
	
КонецФункции

&НаКлиенте
Процедура ТабличныйДокументНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Выполнение = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Область)
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Область)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(Область);
	ДокСсылка = Элемент.ТекущаяОбласть.Расшифровка;
	ИзменитьДокументНаСервере (ДокСсылка, ПараметрыОбласти);
	
	ОбновитьТабличныйДокумент();
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзменении(Элемент)
	ОбновитьТабличныйДокумент();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьДокументНаСервере (ДокументСсылка, Параметры)
	Возврат уп_ПредварительнаяЗапись.ИзменитьПараметрыПриема(ДокументСсылка, Параметры);
КонецФункции

#КонецОбласти


